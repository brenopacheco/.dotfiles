#!/usr/bin/env bash

# `passmenu` is a [dmenu][]-based interface to [pass][], the standard Unix
# password manager. This design allows you to quickly copy a password to the
# clipboard without having to open up a terminal window if you don't already have
# one open.
#
# Modified to work with otp passwords

cat <<EOF
Usage

    passmenu [dmenu arguments...]

EOF

shopt -s nullglob globstar

prefix=${PASSWORD_STORE_DIR-~/.password-store}

password_files=()
for file in $(cd "$prefix" && fd -p '/(otp|web)/.*\.gpg$'); do
	IFS='/' read -r type email target <<<"$file"
	if [[ "$type" == "rec" ]]; then
		continue
	fi
	entry=$(printf '%-32s %-34s %8s;%s' "${target%.gpg}" "$email"  "[${type}]" "${file%.gpg}")
	password_files+=("$entry")
done

password=$(printf '%s\n' "${password_files[@]}" | dmenu -d ";")

[[ -n $password ]] || exit

if [[ $password == otp/* ]]; then
	if ! pass otp code -c "$password"; then
		notify-send -a pass -t 10000 -i error "Error" "Could not decrypt password"
		exit 1
	fi
	icon="/usr/share/icons/Papirus-Dark/24x24/actions/password-copy.svg"
	notify-send -a pass -t 20000 -i "$icon" "${password%.gpg}" "$(xclip -o -selection 'clipboard')"
else
	if ! pass show -c "$password"; then
		notify-send -a pass -t 10000 -i error "Error" "Could not decrypt password"
		exit 1
	fi
	notify-send -a pass -t 5000 "${password%.gpg}"
fi
