#!/usr/bin/env bash

export PATH=$PATH:$HOME/bin        # scripts
export PATH=$PATH:$HOME/.npm/bin   # node
export PATH=$PATH:$HOME/.go/bin    # go
export PATH=$PATH:$HOME/.cargo/bin # rust
export PATH=$PATH:$HOME/.local/bin # python
export PATH=$PATH:$HOME/.pkgs/bin  # other

export GOPATH=$HOME/.go

source ./lib/engine.sh

function show_usage() {
	echo "Usage: tasker [options]"
	echo "Options:"
	echo "  -h, Show help message"
	echo "  -i, Run tasks interactively "
	echo "  -v, Run tasks verbosely"
}

HELP=false
INTERACTIVE=false

while getopts "hiv" opt; do
	case $opt in
	h)
		HELP=true
		;;
	i)
		INTERACTIVE=true
		;;
	v)
		VERBOSE=true
		;;
	\?)
		exit 1
		;;
	esac
done

if $HELP; then
	show_usage
	exit 0
fi

tput clear

echo "TASK RUNNER"
echo

tasks=$(find ./tasks/ -type f -name "*.sh" | sort -n)

if $INTERACTIVE; then
	PS3="Select task: "
	select task in $tasks
	do
		echo "Selected: $task"
		if [[ -n $task ]]; then
			runner "$task" "$VERBOSE"
		fi
	done
	exit 0
fi

declare -A counts

for task in $tasks; do
	# shellcheck disable=SC1091
	test -f "$HOME/.asdf/asdf.sh" && source "$HOME/.asdf/asdf.sh" 2>/dev/null
	runner "$task" "$VERBOSE"
	status=$?
	((counts[$status]++))
	test $status -eq "$FAILED" && exit 1
done

echo
echo " > SUCCEEDED: ${counts[$SUCCEEDED]:-0}"
echo " > FAILED:    ${counts[$FAILED]:-0}"
echo " > ERRORED:   ${counts[$ERRORED]:-0}"
echo " > SKIPPED:   ${counts[$SKIPPED]:-0}"
echo " > UNCHANGED: ${counts[$UNCHANGED]:-0}"
echo

exit 0
