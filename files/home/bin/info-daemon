#!/bin/bash
# Daemon that updates X's root window's STRING.
# Used for dwm's statusbar.
# requires conky. uses file with process ID to
# prevent multiple instances.


# locks process
if [[ -f /tmp/system_info.log ]]; then
	pid=$(cat /tmp/system_info.log)
	ps -p $pid >/dev/null
	[[ $? -eq 0 ]] && exit 0
fi
echo $$ >> /tmp/system_info.log

# sets conky's config and launches daemon
cat<<EOF > /tmp/conky_config
conky.config = {
    cpu_avg_samples = 2,
    net_avg_samples = 2,
    out_to_console = true,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = false,
	update_interval = 1,
}
conky.text = [[\$cpu%]]
EOF
pkill conky
conky -d -c /tmp/conky_config > /tmp/cpu.log

while true; do
	date_data=$( date "+%A %d %B %Y, %T" )
	mem_data=$( free -m | awk 'NR==2{printf "%.0f%%", $3*100/$2 }' )
	disk_data=$( df -h 2>/dev/null | awk '$NF=="/"{printf "%.0f%%", $5}' )
	cpu_data=$(tail -1 /tmp/cpu.log 2>/dev/null)

	cpu_temp="$(sensors | grep Tctl | awk 'NR==1{gsub("+", " "); gsub("\\..", " "); print $2}')"
	if [ "$cpu_temp" -ge 80 ]; then
		cpu_status=" ${cpu_temp}°C"
	else
		cpu_status=" ${cpu_temp}°C"
	fi

	message="󰋊 $disk_data  $cpu_data 󰆋 $mem_data $cpu_status   $date_data |"
    xsetroot -name "$message"
    sleep 3s
    echo $message
done
exit 0
