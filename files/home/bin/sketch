#!/usr/bin/env bash

LANG=$1

function help() {
cat<<EOF
Usage: sketch [go|js|ts|sh|c|lua] [NAME]

Creates a sketch project for a given language.
The directory is created in $HOME/sketch with a random name.
If NAME is provided, the directory name is prefixed with the argument.

EOF
}

if test "$#" -lt 1; then
    help
    exit 0
fi

LANG=$1
NAME=$2

if [[ ! "$LANG" =~ ^(go|js|ts|sh|c|lua)$ ]]; then
    help
    echo "Invalid LANG: use go, sh, js, ts or lua" >&2
    exit 1
fi

mkdir -p ~/sketch

TMPNAME="$LANG_$(cat /dev/urandom | tr -cd 'a-f0-9' | head -c 10)"

if [[ ! -z "$NAME" ]]; then
    TMPNAME="$NAME-$TMPNAME"
fi

DIR="$HOME/sketch/$TMPNAME"

cat<<EOF
Setting up sketch project with $LANG in $DIR
EOF

mkdir -p $DIR
cd $DIR
git init

echo "$GO_TEMPLATE"

case $LANG in
    "go")
        go mod init pkg
        touch main.go
        echo -e "package main\n\nfunc main() {\n\n\n}" > main.go
        echo -e 'all:\n\tgo run main.go' > Makefile
        ;;
    "c")
        echo -e "#include <stdio.h>\n\nint main() {\n\n  return 0;\n}" > main.c
        echo -e 'all:\n\tgcc main.c -o main\n\t./main' > Makefile
        ;;
    "js")
        npm init -y
        touch main.js
        echo -e 'all:\n\tnode main.js' > Makefile
        tsc --init
        ;;
    "ts")
        npm init -y
        touch main.ts
        echo -e 'all:\n\tts-node main.ts' > Makefile
		~/bin/eslint-scaffold
        tsc --init
        ;;
    "sh")
        FILE="main.sh"
        touch $FILE
        chmod +x $FILE
        echo -e "#!/usr/bin/env bash\n" > $FILE
        echo -e "all:\n\t./$FILE" > Makefile
        ;;
    "lua")
        touch main.lua
        ;;
esac

echo "Directory: $DIR"

cp ~/.bashrc $DIR/.bashrc

cat<<EOF >> $DIR/.bashrc
function git_branch {     # get git branch of pwd
    local branch="\$(git branch 2>/dev/null | grep "\*" | colrm 1 2)"
    if [ -n "\$branch" ]; then
        echo " (\$branch)"
    fi
}
EOF

echo "PS1='\[\033[38;5;20m\]\[\033[48;5;11m\]sketch\[$(tput sgr0)\]\[\e[34m\] \w\[$(tput sgr0)\]\$ '" >> $DIR/.bashrc

tmux new -s $TMPNAME "bash --rcfile $DIR/.bashrc -i"

exit 0
