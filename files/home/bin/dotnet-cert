#!/bin/sh
# "Generates a valid ASP.NET Core self-signed certificate for the local machine."

TMP_PATH=/var/tmp/localhost-dev-cert
KEYFILE=$TMP_PATH/dotnet-devcert.key
CRTFILE=$TMP_PATH/dotnet-devcert.crt
PFXFILE=$TMP_PATH/dotnet-devcert.pfx
NSSDB_PATHS="$HOME/.pki/nssdb"
CONF_PATH=$TMP_PATH/localhost.conf

if [ ! -d $TMP_PATH ]; then
	mkdir $TMP_PATH
fi

cleanup() {
	rm -R $TMP_PATH
}

cat >>$CONF_PATH <<EOF
[req]
prompt                  = no
default_bits            = 2048
distinguished_name      = subject
req_extensions          = req_ext
x509_extensions         = x509_ext

[ subject ]
commonName              = localhost

[req_ext]
basicConstraints        = critical, CA:true
subjectAltName          = @alt_names

[x509_ext]
basicConstraints        = critical, CA:true
keyUsage                = critical, keyCertSign, cRLSign, digitalSignature,keyEncipherment
extendedKeyUsage        = critical, serverAuth
subjectAltName          = critical, @alt_names
1.3.6.1.4.1.311.84.1.1  = ASN1:UTF8String:ASP.NET Core HTTPS development certificate # Needed to get it imported by dotnet dev-certs

[alt_names]
DNS.1                   = localhost
EOF

configure_nssdb() {
	echo "Configuring nssdb for $1"
	certutil -d sql:"$1" -D -n dotnet-devcert
	certutil -d sql:"$1" -A -t "CP,," -n dotnet-devcert -i "$CRTFILE"
}

openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout "$KEYFILE" -out "$CRTFILE" -config $CONF_PATH --passout pass:
openssl pkcs12 -export -out "$PFXFILE" -inkey "$KEYFILE" -in "$CRTFILE" --passout pass:

for NSSDB in $NSSDB_PATHS; do
	if [ -d "$NSSDB" ]; then
		configure_nssdb "$NSSDB"
	fi
done

dotnet dev-certs https --clean --import "$PFXFILE" -p ""

test -d "$HOME/.aspnet/" || mkdir -p "$HOME/.aspnet/"

cp "$CRTFILE" "$HOME"/.aspnet/
echo "Saved certificate to $HOME/.aspnet/$(basename $CRTFILE)"

cp "$PFXFILE" "$HOME"/.aspnet/
echo "Saved certificate to $HOME/.aspnet/$(basename $PFXFILE)"

OLD_CRT=/etc/ca-certificates/trust-source/localhost.p11-kit
if [ -f "$OLD_CRT" ]; then
	$SUDO rm "$OLD_CRT"
fi

sudo trust anchor --store "$CRTFILE"
sudo trust extract-compat
