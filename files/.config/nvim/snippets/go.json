{
  "main": { "prefix": ["main"], "body": ["func main() {", "\t$0", "}"] },
  "fun": {
    "prefix": ["fun", "fu", "fn", "f"],
    "body": ["func ${1:foo}(${2:b bar}) ${3:(${4:q qux})}  {", "\t${0}", "}"]
  },
  "afun": {
    "prefix": ["afun", "af"],
    "body": ["func(${1:foo Foo}) (${2:bar Bar}) {", "\t${0}", "}"]
  },
  "imp": { "prefix": ["imp"], "body": ["import (", "\t\"${0}\"", ")"] },
  "for": {
    "prefix": ["for"],
    "body": ["for $1 {", "\t${0}", "}"]
  },
  "forr": {
    "prefix": ["forr"],
    "body": ["for ${1:foo} := range ${2:bar} {", "\t${0}", "}"]
  },
  "fori": {
    "prefix": ["fori"],
    "body": ["for ${1:i} := 0; ${1:i} < ${2:1}; ${1:i}++ {", "\t${0}", "}"]
  },
  "if": {
    "prefix": ["if"],
    "body": ["if ${1:true} {", "\t${0}", "}"]
  },
  "ife": {
    "prefix": ["ife"],
    "body": ["if err != nil {", "\t${0}", "}"]
  },
  "typedef": {
    "prefix": ["type", "td"],
    "body": [
      "type ${1:Foo} ${2:Bar}"
    ]
  },
  "typedef-struct": {
    "prefix": ["types", "tds", "ts"],
    "body": ["type ${1:foo} struct {", "\t$0", "}"]
  },
  "method": {
    "prefix": ["m", "met", "method"],
    "body": [
      "func (${1:f *foo}) ${2:bar}(${3:q qux}) (${4:b baz}) {",
      "\t$0",
      "}"
    ]
  },
  "switch": {
    "prefix": ["switch", "sw"],
    "body": ["switch $1 {", "\t$0", "}"]
  },
  "case": {
    "prefix": ["case", "cs"],
    "body": ["case ${1:foo}:", "\t$0"]
  },
  "default": {
    "prefix": ["default"],
    "body": ["default:", "\t$0"]
  },
  "defer": {
    "prefix": ["def"],
    "body": [
      "defer $0"
    ]
  },
  "interface": {
    "prefix": ["interface", "intf"],
    "body": ["type ${1:foo} interface {", "\t$0", "}"]
  },
  "anonymous-interface": {
    "prefix": ["an", "ai", "aint"],
    "body": [
      "interface{}"
    ]
  },
  "range": {
    "prefix": ["range", "r"],
    "body": ["${1:foo} := range ${0:bar}"]
  },
  "struct": {
    "prefix": ["struct", "st"],
    "body": ["struct {", "\t$0", "}"]
  },
  "test-single": {
    "prefix": ["test-single"],
    "body": [
      "func Test${1:Foo}(t *testing.T) {",
      "\twant := \"\"",
      "\tgot := ${1}()",
      "\tif want != got {",
      "\t\tt.Fatalf(`${1}: want %q, got %q`, want, got)",
      "\t}",
      "}"
    ]
  },
  "test-table": {
    "prefix": ["test-table"],
    "body": [
      "func Test${1:Foo}(t *testing.T) {",
      "\tvar tests = []struct {",
      "\t\tname string",
      "\t\twant int",
      "\t\targs []int",
      "\t}{",
      "\t\t{\"foo\", 3, []int{1, 2}},",
      "\t\t{\"bar\", 3, []int{2, 1}},",
      "\t}",
      "",
      "\tfor _, tt := range tests {",
      "\t\tt.Run(tt.name, func(t *testing.T) {",
      "\t\t\tgot := ${1}(tt.args[0], tt.args[1])",
      "\t\t\tif got != tt.want {",
      "\t\t\t\tt.Errorf(\"got %d, want %d\", got, tt.want)",
      "\t\t\t}",
      "\t\t})",
      "\t}",
      "}"
    ]
  }
}
