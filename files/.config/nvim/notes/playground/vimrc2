
let g:vsnip_integ_debug = v:true

set noshowmode
call plug#begin('/home/breno/.cache/nvim/plug/')
    let g:plug_timeout=99999
    Plug 'hrsh7th/vim-vsnip'
    Plug 'hrsh7th/vim-vsnip-integ'
    Plug 'neovim/nvim-lsp'
    Plug 'neovim/nvim-lspconfig'
    "Plug 'brenopacheco/completion-nvim'
    Plug 'nvim-lua/completion-nvim'
call plug#end()

lua << EOF
    local capabilities = vim.lsp.protocol.make_client_capabilities()
    capabilities.textDocument.completion.completionItem.snippetSupport = true
    require'lspconfig'.ccls.setup{
        on_attach = require'completion'.on_attach,
        capabilities = capabilities,
        init_options = { usePlaceholders = true, }
    }
EOF

autocmd BufEnter * set omnifunc=v:lua.vim.lsp.omnifunc
autocmd BufEnter * lua require'completion'.on_attach()

let g:vsnip_extra_mapping = v:false
let g:vsnip_snippet_dir   = expand('~/.config/nvim/snippets')

set completeopt=menuone,noinsert,noselect
set pumheight=8


" au CompleteDone * echo string(v:completed_item)

let g:completion_enable_snippet         = "vim-vsnip"
let g:completion_trigger_keyword_length = 1
let g:completion_enable_auto_hover      = 1
let g:completion_enable_auto_signature  = 1
let g:completion_sorting                = "length"
let g:completion_matching_strategy_list = ['exact']
let g:completion_matching_ignore_case   = 1
let g:completion_trigger_on_delete      = 1
let g:completion_abbr_length            = 20
let g:completion_menu_length            = 8
let g:completion_timer_cycle            = 50 " required for fast typing

let g:completion_trigger_character      = []
let g:completion_auto_change_source     = 1
let g:completion_enable_auto_popup      = 1
let g:completion_chain_complete_list = {
   \     'default': [
   \       {'complete_items': ['lsp', 'vim-vsnip']}
   \ ]}


" imap <TAB> <Plug>(completion_confirm_completion)

let g:completion_confirm_key = ""
inoremap <CR> <c-g>u<cr>
imap <expr> <TAB>
            \ pumvisible() ?
            \     complete_info()["selected"] != "-1" ?
            \       "\<Plug>(completion_confirm_completion)"  :
            \       "\<C-n>\<Plug>(completion_confirm_completion)" :
            \   vsnip#jumpable(1) ?
            \         "\<Plug>(vsnip-jump-next)" :
            \       "\<TAB>"

imap <expr> <S-Tab> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<S-Tab>'
smap <expr> <Tab>   vsnip#jumpable(1)  ? '<Plug>(vsnip-jump-next)' : '<Tab>'
smap <expr> <S-Tab> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<S-Tab>'
xmap s <Plug>(vsnip-cut-text)
" nmap <expr> <Tab>   vsnip#jumpable(1)  ? 'i<Plug>(vsnip-jump-next)' : '<Tab>'
" nmap <expr> <S-Tab> vsnip#jumpable(1)  ? 'i<Plug>(vsnip-jump-prev)' : '<Tab>'

" imap <silent> <C-space> <Plug>(completion_trigger)
" imap <c-j> <Plug>(completion_next_source)
" imap <c-k> <Plug>(completion_prev_source)
