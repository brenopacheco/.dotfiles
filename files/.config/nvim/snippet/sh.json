{
    "#!": {
        "prefix": "#!",
        "description": "#!",
        "body": [
        "#!/usr/bin/env sh"
        ]
    },
    "s#!": {
        "prefix": "s#!",
        "description": "s#!",
        "body": [
        "#!/usr/bin/env sh",
        "set -eu"
        ]
    },
    "safe": {
        "prefix": "safe",
        "description": "safe",
        "body": [
        "set -eu"
        ]
    },
    "bash": {
        "prefix": "bash",
        "description": "bash",
        "body": [
        "#!/usr/bin/env bash"
        ]
    },
    "sbash": {
        "prefix": "sbash",
        "description": "sbash",
        "body": [
        "#!/usr/bin/env bash",
        "set -euo pipefail",
        "IFS=$'\\n\\t'"
        ]
    },
    "if": {
        "prefix": "if",
        "description": "if",
        "body": [
        "if [[ ${1:condition} ]]; then",
        "    ${0:${TM_SELECTED_TEXT}}",
        "fi"
        ]
    },
    "elif": {
        "prefix": "elif",
        "description": "elif",
        "body": [
        "elif [[ ${1:condition} ]]; then",
        "    ${0:${TM_SELECTED_TEXT}}"
        ]
    },
    "for": {
        "prefix": "for",
        "description": "for",
        "body": [
        "for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do",
        "    ${0:${TM_SELECTED_TEXT}}",
        "done"
        ]
    },
    "fori": {
        "prefix": "fori",
        "description": "fori",
        "body": [
        "for ${1:needle} in ${2:haystack} ; do",
        "    ${0:${TM_SELECTED_TEXT}}",
        "done"
        ]
    },
    "wh": {
        "prefix": "wh",
        "description": "wh",
        "body": [
        "while [[ ${1:condition} ]]; do",
        "    ${0:${TM_SELECTED_TEXT}}",
        "done"
        ]
    },
    "until": {
        "prefix": "until",
        "description": "until",
        "body": [
        "until [[ ${1:condition} ]]; do",
        "    ${0:${TM_SELECTED_TEXT}}",
        "done"
        ]
    },
    "case": {
        "prefix": "case",
        "description": "case",
        "body": [
        "case ${1:word} in",
        "    ${2:pattern})",
        "        ${0};;",
        "esac"
        ]
    },
    "go": {
        "prefix": "go",
        "description": "go",
        "body": [
        "while getopts '${1:o}' ${2:opts}",
        "do",
        "    case $$2 in",
        "    ${3:o0})",
        "        ${0:#staments};;",
        "    esac",
        "done"
        ]
    },
    "sdir": {
        "prefix": "sdir",
        "description": "sdir",
        "body": [
        "SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\""
        ]
    },
    "getopt": {
        "prefix": "getopt",
        "description": "getopt",
        "body": [
        "__ScriptVersion=\"${1:version}\"",
        "#===  FUNCTION  ================================================================",
        "#         NAME:  usage",
        "#  DESCRIPTION:  Display usage information.",
        "#===============================================================================",
        "function usage ()",
        "{",
        "    echo \"Usage :  $${0:0} [options] [--]",
        "    Options:",
        "    -h|help       Display this message",
        "    -v|version    Display script version\"",
        "}    # ----------  end of function usage  ----------",
        "#-----------------------------------------------------------------------",
        "#  Handle command line arguments",
        "#-----------------------------------------------------------------------",
        "while getopts \":hv\" opt",
        "do",
        "  case $opt in",
        "    h|help     )  usage; exit 0   ;;",
        "    v|version  )  echo \"$${0:0} -- Version $__ScriptVersion\"; exit 0   ;;",
        "    * )  echo -e \"\\n  Option does not exist : $OPTARG\\n\"",
        "          usage; exit 1   ;;",
        "  esac    # --- end of case ---",
        "done",
        "shift $(($OPTIND-1))"
        ]
    },
    "root": {
        "prefix": "root",
        "description": "root",
        "body": [
        "if [ \\$(id -u) -ne 0 ]; then exec sudo \\$0; fi"
        ]
    },
    "fun-sh": {
        "prefix": "fun-sh",
        "description": "fun-sh",
        "body": [
        "${1:function_name}() {",
        "    ${0:#function_body}",
        "}"
        ]
    },
    "fun": {
        "prefix": "fun",
        "description": "fun",
        "body": [
        "function ${1:function_name}() {",
        "    ${0:#function_body}",
        "}"        ]
    }
}
